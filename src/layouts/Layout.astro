---
interface Props {
  title?: string;
}

const { title = 'JSON â†” TOON Converter' } = Astro.props;
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Convert between JSON and TOON (Token-Oriented Object Notation) - an efficient format for LLMs. 100% client-side, your data never leaves your browser." />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script>
      // Initialize dark mode as default
      (function() {
        const saved = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        if (saved === 'light') {
          document.documentElement.classList.remove('dark');
        } else if (saved === 'dark' || !saved) {
          document.documentElement.classList.add('dark');
        }
      })();
    </script>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  html {
    font-family: system-ui, sans-serif;
  }
  
  body {
    margin: 0;
    min-height: 100vh;
    transition: background-color 0.2s ease;
  }
  
  html:not(.dark) body {
    background: linear-gradient(to bottom, #f8fafc, #e2e8f0);
  }
  
  html.dark body {
    background: linear-gradient(to bottom, #0f172a, #1e293b);
  }
</style>

